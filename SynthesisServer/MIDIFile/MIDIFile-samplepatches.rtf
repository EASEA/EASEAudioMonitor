{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fnil\fcharset77 Monaco;}
{\colortbl;\red255\green255\blue255;\red191\green0\blue0;\red0\green0\blue191;\red96\green96\blue96;
\red0\green115\blue0;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\fs18 \cf0 \
(\
\cf2 // read only header\cf0 \
\cf3 var\cf0  midifile, path;\
\cf2 // where are you\cf0 \
path =\cf4 "/Volumes/n/Home/Users/heiko/Documents/Music/supercollider/works/aaSC_in_out/other/out/midi/waechter.mid"\cf0 ;\
\
midifile = \cf3 MIDIFile\cf0 .new;\
midifile.readHeader(path);\
midifile.format.postln;\
midifile.ntrks.postln;\
midifile.division.postln;\
midifile.scores.postln;\
midifile.dataChunks.postln;\
)\
\
\
(\
\cf2 // read intire file\cf0 \
\cf3 var\cf0  midifile, path;\
\cf2 // where are you\cf0 \
path =\cf4 "/Volumes/n/Home/Users/heiko/Documents/Music/supercollider/works/aaSC_in_out/other/out/midi/waechter.mid"\cf0 ;\
\
midifile = \cf3 MIDIFile\cf0 .new;\
midifile.read(path);\
midifile.format.postln;\
midifile.ntrks.postln;\
midifile.division.postln;\
midifile.scores.at(1).postln; \cf2 // midifile.scores.at(0).postln; // for format 0 \cf0 \
midifile.tempos.postln;\
midifile.offsets.postln;\
midifile.timeSigns.postln;\
midifile.texts.at(4).postln;\
midifile.seqNums.postln;\
)\
\
\
\
\cf2 // play one score\cf0 \
\cf2 // the synth\cf0 \
\cf3 SynthDef\cf0 (\cf4 "midiplayer"\cf0 ,\{ \cf3 arg\cf0  out=0, freq=0, vol=0.5;\
	\cf3 Out\cf0 .ar(out,\cf3 SinOsc\cf0 .ar(freq, 0, vol))\
\}).writeDefFile;\
s.sendSynthDef(\cf4 "midiplayer"\cf0 );\
\
(\
\cf2 // the score player\cf0 \
\cf3 var\cf0  midifile, path, div, score, tempo= 160, step=0;\
\cf2 // where are you\cf0 \
path =\cf4 "/Volumes/n/Home/Users/heiko/Documents/Music/supercollider/works/aaSC_in_out/other/out/midi/waechter.mid"\cf0 ;\
\
midifile=\cf3 MIDIFile\cf0 .new;\
midifile.read(path);\
score = midifile.scores.at(1); \cf2 // score = midifile.scores.at(0); // for format 0\cf0 \
div = midifile.division;\
score.do(\{ \cf3 arg\cf0  item; \
	item.put(0,item.at(0)/(div*tempo/60));\
	item.put(1,item.at(1)-1);\
\});\
10.do(\{\cf3 arg\cf0  i; score.at(i).postln\});\
s.sendMsg(\cf4 "/s_new"\cf0 , \cf4 "midiplayer"\cf0 , 1000, 1, 0, \cf5 \\out\cf0 , 0, \cf5 \\freq\cf0 , 0, \cf5 \\vol\cf0 , 0.5);\
\
\cf2 // play the score\cf0 \
\cf3 SystemClock\cf0 .sched(0.0,\{ \cf3 arg\cf0  time; \
	\
	\cf2 //score.at(step).at(2).postln;\cf0 \
	s.sendMsg(\cf4 "/n_set"\cf0 , 1000, \cf5 \\freq\cf0 , score.at(step).at(2).midicps);\
	s.sendMsg(\cf4 "/n_set"\cf0 , 1000, \cf5 \\vol\cf0 , score.at(step).at(3).midicps/1000);\
	step = step+1; \
	if(step<score.size,\{score.at(step).at(0)\},\{\cf3 nil\cf0 \}) \
\});\
)\
\
\
\cf2 // play two handed\cf0 \
\cf2 // synth definition\cf0 \
\cf3 SynthDef\cf0 (\cf4 "midiplayer2"\cf0 ,\{ \cf3 arg\cf0  out=0, freq=0, vol=0.5;\
	\cf3 Out\cf0 .ar(out,\cf3 Formant\cf0 .ar(freq, 900, 880.0, vol))\
\}).writeDefFile;\
s.sendSynthDef(\cf4 "midiplayer2"\cf0 );\
\
(\
\cf2 // scoreplayer\cf0 \
\cf3 var\cf0  midifile, path, div, score1, score2, tempo= 160, step=0;\
\cf2 // where are you\cf0 \
path =\cf4 "/Volumes/n/Home/Users/heiko/Documents/Music/supercollider/works/aaSC_in_out/other/out/midi/waechter.mid"\cf0 ;\
\cf2 //path ="/Volumes/n/Home/Users/heiko/Documents/Music/supercollider/works/aaSC_in_out/other/out/midi/duf2.mid";\cf0 \
\
midifile=\cf3 MIDIFile\cf0 .new;\
midifile.read(path);\
score1 = midifile.scores.at(1); \cf2 // score = midifile.scores.at(0); // for format 0\cf0 \
score2 = midifile.scores.at(2); \
div = midifile.division;\
score1.do(\{ \cf3 arg\cf0  item; \
	item.put(0,item.at(0)/(div*tempo/60));\
	item.put(1,item.at(1)-1);\
\});\
score2.do(\{ \cf3 arg\cf0  item; \
	item.put(0,item.at(0)/(div*tempo/60));\
	item.put(1,item.at(1)-1);\
\});\
\cf2 //10.do(\{arg i; score1.at(i).postln\});\cf0 \
\cf2 //10.do(\{arg i; score2.at(i).postln\});\cf0 \
s.sendMsg(\cf4 "/s_new"\cf0 , \cf4 "midiplayer2"\cf0 , 1000, 1, 0, \cf5 \\out\cf0 , 0, \cf5 \\freq\cf0 , 0, \cf5 \\vol\cf0 , 0.5);\
s.sendMsg(\cf4 "/s_new"\cf0 , \cf4 "midiplayer2"\cf0 , 1001, 1, 0, \cf5 \\out\cf0 , 0, \cf5 \\freq\cf0 , 0, \cf5 \\vol\cf0 , 0.5);\
\
\cf2 // play the score\cf0 \
\cf3 SystemClock\cf0 .sched(0.0,\{ \cf3 arg\cf0  time; \
	\
	\cf2 //score.at(step).at(2).postln;\cf0 \
	s.sendMsg(\cf4 "/n_set"\cf0 , 1000, \cf5 \\freq\cf0 , score1.at(step).at(2).midicps);\
	s.sendMsg(\cf4 "/n_set"\cf0 , 1001, \cf5 \\freq\cf0 , score2.at(step).at(2).midicps);\
	s.sendMsg(\cf4 "/n_set"\cf0 , 1000, \cf5 \\vol\cf0 , score1.at(step).at(3).midicps/1000);\
	s.sendMsg(\cf4 "/n_set"\cf0 , 1001, \cf5 \\vol\cf0 , score2.at(step).at(3).midicps/1000);\
	step = step+1; \
	if(step<score1.size,\{score1.at(step).at(0)\},\{\cf3 nil\cf0 \}) \
\});\
)\
\
\
\
}